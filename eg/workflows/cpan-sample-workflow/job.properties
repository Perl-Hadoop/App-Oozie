#
# Oozie job properties file skeleton
# ----------------------------------
#
# Read the Oozie documentation in the wiki for a general overview
#
# https://oozie.apache.org/docs/4.1.0/index.html
#
# This file is necessary for deploying an oozie job, and works best with oozie
# deploy and run tools. Their objective being to simplify deployment and
# configuration, some steps that you will find in the docs might be superfluous.
# Read on...
#
# To make and deploy an oozie job:
# - copy the current folder under a new name in $base/workflows/
# - adapt workflow.xml and possibly coordinator.xml
# - from the workflows/ dir, run ../tools/oozie-deploytool.pl <name>
# - then ../tools/oozie-run.pl <name>
#
# You can also put your files in a different directory, and only put a symlink
# in the workflows dir

# Note the jobtracker and namenode specs are handled by the oozie-run script, and
# don't need to be specified here. The name will be taken from the directory name.
# Same goes for the job-xml property

# If you intend to be running not a coordinator but a single workflow, just
# remove the coordinator.xml file

# The general advice: put as many properties in the global section of the
# workflow.xml file, and as little as possible here or in the coordinator.xml
# file. The reason is that code changes in the workflow become visible as soon
# as the file is uploaded in HDFS, whereas properties and coordinator.xml
# changes require the coordinator to be killed and restarted on the oozie
# server.

# Actual definition starts after this line

# You might want to keep this as-is, you don't need to touch these and they need to exists
# queueName=default
queueName=my.queue
oozie.use.system.libpath=true

# do not specify oozie.wf.application.path or oozie.coord.application.path

# start time can be specified on the oozie-run command line, no need to set
# them here. They are kept in here as an example only.
#
# startTime = <ISO timestamp>... optional, default is this morning at 0:00 UTC
# endTime = <5 years from now>

# These will be accessible in the coordinator and workflow as ${myProperty} and
# ${myOtherProperty}
# myProperty = foo
# myOtherProperty = 10000

# interpolated in coordinator
flagsBaseDir = /user/hive/flags/my_dir_for_important_flags

